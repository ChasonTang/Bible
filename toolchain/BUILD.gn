toolchain("clang") {
    tool("cc") {
        depfile = "{{output}}.d"
        # depsformat = "gcc"
        command = "clang -g -MMD -MF $depfile {{include_dirs}} -c {{source}} -o {{output}}"
        if (!is_debug) {
            command = string_join(" ", [command, "-Os", "-fembed-bitcode", "-flto"])
        } else {
            command = string_join(" ", [command, "-fembed-bitcode-marker"])
        }
        outputs = [
            "{{source_out_dir}}/{{source_name_part}}.o"
        ]
    }

    tool("cxx") {
        depfile = "{{output}}.d"
        command = "clang++ -std=c++11 -stdlib=libc++ -g -MMD -MF $depfile {{include_dirs}} -c {{source}} -o {{output}}"
        if (!is_debug) {
            command = string_join(" ", [command, "-Os", "-fembed-bitcode", "-flto"])
        } else {
            command = string_join(" ", [command, "-fembed-bitcode-marker"])
        }
        outputs = [
            "{{source_out_dir}}/{{source_name_part}}.o"
        ]
    }

    tool("stamp") {
        command = "touch {{output}}"
    }

    tool("link") {
        rspfile_content = "{{inputs}} {{frameworks}} {{libs}}"
        rspfile = "{{output}}.rsp"
        command = "clang -fembed-bitcode -o {{output}} -Xlinker -object_path_lto -Xlinker {{output_dir}}/{{target_output_name}}_lto.o @$rspfile"
        default_output_dir = "{{root_out_dir}}"
        outputs = [
            "{{output_dir}}/{{target_output_name}}{{output_extension}}"
        ]
    }

    tool("alink") {
        rspfile_content = "{{inputs}}"
        rspfile = "{{output}}.rsp"
        command = "libtool -static -o {{output}} @$rspfile"
        default_output_dir = "{{target_out_dir}}"
        outputs = [
            "{{output_dir}}/{{target_output_name}}{{output_extension}}"
        ]
        default_output_extension = ".a"
        output_prefix = "lib"
    }
}