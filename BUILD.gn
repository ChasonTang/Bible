config("napi") {
    include_dirs = [
        "include"
    ]
}

config("uthash") {
    include_dirs = [
        "third_party/uthash/src"
    ]
}

static_library("napi_jsc") {
    configs = [
        ":uthash"
    ]

    public_configs = [
        ":napi",
    ]

    frameworks = [ "JavaScriptCore.framework" ]

    sources = [
        "src/js_native_api_jsc.c"
    ]
}

executable("test") {
    testonly = true

    include_dirs = [
        "test/include"
    ]

    sources = [
        "test/2_function_arguments.cc",
        "test/3_callbacks.cc",
        "test/4_object_factory.cc",
        "test/5_function_factory.cc",
        "test/6_object_wrap.cc",
        # 涉及 GC 和 setImmediate
#        "test/7_factory_wrap.cc",
#        "test/8_passing_wrapped.cc",
        "test/test_array.cc",
        "test/common.c"
    ]

    deps = [
        ":gtest_main",
        ":napi_jsc"
    ]
}

config("gtest_config") {
    libs = [
        "c++"
    ]
    include_dirs = [
        "third_party/googletest/googletest/include"
    ]
}

source_set("gtest") {
    testonly = true
    sources = [
        "third_party/googletest/googletest/src/gtest-death-test.cc",
        "third_party/googletest/googletest/src/gtest-filepath.cc",
        "third_party/googletest/googletest/src/gtest-matchers.cc",
        "third_party/googletest/googletest/src/gtest-port.cc",
        "third_party/googletest/googletest/src/gtest-printers.cc",
        "third_party/googletest/googletest/src/gtest-test-part.cc",
        "third_party/googletest/googletest/src/gtest-typed-test.cc",
        "third_party/googletest/googletest/src/gtest.cc",
    ]

    # Some files include "src/gtest-internal-inl.h".
    include_dirs = [ "third_party/googletest/googletest" ]

    public_configs = [ ":gtest_config" ]
}

source_set("gtest_main") {
    testonly = true
    sources = [ "third_party/googletest/googletest/src/gtest_main.cc" ]
    deps = [ ":gtest" ]

    public_configs = [
        ":gtest_config"
    ]
}

# config("gmock_config") {
#     # libs = [
#     #     "c++"
#     # ]
#     include_dirs = [
#         "third_party/googletest/googlemock/include",
#     ]
# }

# source_set("gmock") {
#     testonly = true
#     sources = [
#         "third_party/googletest/googlemock/src/gmock-cardinalities.cc",
#         "third_party/googletest/googlemock/src/gmock-internal-utils.cc",
#         "third_party/googletest/googlemock/src/gmock-matchers.cc",
#         "third_party/googletest/googlemock/src/gmock-spec-builders.cc",
#         "third_party/googletest/googlemock/src/gmock.cc",
#     ]

#     deps = [
#         ":gtest"
#     ]

#     public_configs = [
#         ":gmock_config",
#         ":gtest_config"
#     ]
# }

# source_set("gmock_main") {
#     testonly = true
#     sources = [ "third_party/googletest/googlemock/src/gmock_main.cc" ]
#     deps = [ ":gmock" ]

#     public_configs = [
#         ":gmock_config",
#         ":gtest_config"
#     ]
# }