config("strict_build") {
  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-Wpedantic",
  ]
}

config("minimal_size_build") {
  cflags_cc = [
    "-fno-exceptions",
    "-fno-rtti",
  ]
}

config("quickjs_build") {
  include_dirs = [ "third_party/quickjs" ]
  cflags_c = [ "-funsigned-char" ]
}

source_set("quickjs_source_set") {
  configs = [ ":quickjs_build" ]
  defines = [ "CONFIG_VERSION=\"2021-03-27\"" ]
  sources = [
    "third_party/quickjs/cutils.c",
    "third_party/quickjs/libregexp.c",
    "third_party/quickjs/libunicode.c",
    "third_party/quickjs/quickjs.c",
  ]
  if (enable_qjs_big_number) {
    sources += [ "third_party/quickjs/libbf.c" ]
  }
}

config("llvm_build") {
  include_dirs = [
    "third_party/hermes/external/llvh/include",
    "third_party/include",
    "third_party/hermes/external/llvh/gen/include",
  ]
  defines = [
    "LLVM_ON_UNIX",
    "LLVM_DEFAULT_TARGET_TRIPLE=\"\"",
    "LLVM_HOST_TRIPLE=\"\"",
    "HAVE_UNISTD_H=1",  # ErrorHandling.cpp:117
    "PACKAGE_NAME=\"\"",
    "PACKAGE_VERSION=\"\"",
    "HAVE_SYS_MMAN_H",  # Memory.inc:51
    "HAVE_SYS_STAT_H=1",  # Path.inc:286
    "LLVM_ENABLE_CRASH_DUMPS=0",
    "HAVE_GETPAGESIZE",  # Process.inc:82
    "HAVE_FCNTL_H=1",  # Process.inc:216
    "HAVE_SIGNAL_H=1",  # Process.inc:232
    "RETSIGTYPE=void",
  ]
}

config("cpp_new_build") {
  cflags_cc = [
    # 主要因为 NDK 目前暂时不支持 C++20
    "-std=c++17",
    "-fvisibility=hidden",
  ]
}

source_set("llvm_demangle") {
  configs = [
    ":minimal_size_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/external/llvh/lib/Demangle/ItaniumDemangle.cpp",
    "third_party/hermes/external/llvh/lib/Demangle/MicrosoftDemangle.cpp",
    "third_party/hermes/external/llvh/lib/Demangle/MicrosoftDemangleNodes.cpp",
  ]
}

source_set("llvm_support") {
  configs = [
    ":minimal_size_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/external/llvh/lib/Support/APFloat.cpp",
    "third_party/hermes/external/llvh/lib/Support/APInt.cpp",
    "third_party/hermes/external/llvh/lib/Support/CommandLine.cpp",
    "third_party/hermes/external/llvh/lib/Support/ConvertUTF.cpp",
    "third_party/hermes/external/llvh/lib/Support/ConvertUTFWrapper.cpp",
    "third_party/hermes/external/llvh/lib/Support/Debug.cpp",
    "third_party/hermes/external/llvh/lib/Support/Errno.cpp",
    "third_party/hermes/external/llvh/lib/Support/Error.cpp",
    "third_party/hermes/external/llvh/lib/Support/ErrorHandling.cpp",
    "third_party/hermes/external/llvh/lib/Support/FileCheck.cpp",
    "third_party/hermes/external/llvh/lib/Support/FoldingSet.cpp",
    "third_party/hermes/external/llvh/lib/Support/GraphWriter.cpp",
    "third_party/hermes/external/llvh/lib/Support/Hashing.cpp",
    "third_party/hermes/external/llvh/lib/Support/Host.cpp",
    "third_party/hermes/external/llvh/lib/Support/InitLLVM.cpp",
    "third_party/hermes/external/llvh/lib/Support/LineIterator.cpp",
    "third_party/hermes/external/llvh/lib/Support/Locale.cpp",
    "third_party/hermes/external/llvh/lib/Support/MD5.cpp",
    "third_party/hermes/external/llvh/lib/Support/ManagedStatic.cpp",
    "third_party/hermes/external/llvh/lib/Support/Memory.cpp",
    "third_party/hermes/external/llvh/lib/Support/MemoryBuffer.cpp",
    "third_party/hermes/external/llvh/lib/Support/Mutex.cpp",
    "third_party/hermes/external/llvh/lib/Support/NativeFormatting.cpp",
    "third_party/hermes/external/llvh/lib/Support/Path.cpp",
    "third_party/hermes/external/llvh/lib/Support/PrettyStackTrace.cpp",
    "third_party/hermes/external/llvh/lib/Support/Process.cpp",
    "third_party/hermes/external/llvh/lib/Support/Program.cpp",
    "third_party/hermes/external/llvh/lib/Support/Regex.cpp",
    "third_party/hermes/external/llvh/lib/Support/SHA1.cpp",
    "third_party/hermes/external/llvh/lib/Support/Signals.cpp",
    "third_party/hermes/external/llvh/lib/Support/SmallPtrSet.cpp",
    "third_party/hermes/external/llvh/lib/Support/SmallVector.cpp",
    "third_party/hermes/external/llvh/lib/Support/SourceMgr.cpp",
    "third_party/hermes/external/llvh/lib/Support/Statistic.cpp",
    "third_party/hermes/external/llvh/lib/Support/StringExtras.cpp",
    "third_party/hermes/external/llvh/lib/Support/StringMap.cpp",
    "third_party/hermes/external/llvh/lib/Support/StringRef.cpp",
    "third_party/hermes/external/llvh/lib/Support/StringSaver.cpp",
    "third_party/hermes/external/llvh/lib/Support/TargetParser.cpp",
    "third_party/hermes/external/llvh/lib/Support/Threading.cpp",
    "third_party/hermes/external/llvh/lib/Support/Timer.cpp",
    "third_party/hermes/external/llvh/lib/Support/Triple.cpp",
    "third_party/hermes/external/llvh/lib/Support/Twine.cpp",
    "third_party/hermes/external/llvh/lib/Support/Unicode.cpp",
    "third_party/hermes/external/llvh/lib/Support/Valgrind.cpp",
    "third_party/hermes/external/llvh/lib/Support/Watchdog.cpp",
    "third_party/hermes/external/llvh/lib/Support/circular_raw_ostream.cpp",
    "third_party/hermes/external/llvh/lib/Support/raw_os_ostream.cpp",
    "third_party/hermes/external/llvh/lib/Support/raw_ostream.cpp",
    "third_party/hermes/external/llvh/lib/Support/regcomp.c",
    "third_party/hermes/external/llvh/lib/Support/regerror.c",
    "third_party/hermes/external/llvh/lib/Support/regexec.c",
    "third_party/hermes/external/llvh/lib/Support/regfree.c",
    "third_party/hermes/external/llvh/lib/Support/regstrlcpy.c",
  ]
}

source_set("dtoa") {
  configs = [ ":minimal_size_build" ]
  cflags = [ "-fvisibility=hidden" ]
  sources = [
    "third_party/hermes/external/dtoa/dtoa.c",
    "third_party/hermes/external/dtoa/g_fmt.c",
    "third_party/hermes/external/dtoa/locks.cpp",
  ]
  defines = [
    "IEEE_8087",
    "Long=int",
    "NO_HEX_FP",
    "NO_INFNAN_CHECK",
    "MULTIPLE_THREADS",
  ]
}

config("hermes_build") {
  include_dirs = [
    "third_party/hermes/include",
    "third_party/hermes/public",
  ]
  defines = [
    "HERMESVM_GC_HADES",
    "HERMESVM_INDIRECT_THREADING",
    "HERMESVM_ALLOW_COMPRESSED_POINTERS",
    "HERMESVM_HEAP_SEGMENT_SIZE_KB=4096",
    "HERMESVM_ALLOW_CONCURRENT_GC",
    "HERMESVM_ALLOW_INLINE_ASM",
    "HERMES_ENABLE_DEBUGGER",
  ]
  if (target_os == "android") {
    defines += [ "HERMES_PLATFORM_UNICODE=HERMES_PLATFORM_UNICODE_JAVA" ]
  }
  if (ubsan) {
    defines += [ "HERMES_UBSAN" ]
  }
  if (is_debug) {
    defines += [ "HERMES_SLOW_DEBUG" ]
  }
}

source_set("hermes_adt") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  sources = [ "third_party/hermes/lib/ADT/CompactArray.cpp" ]
}

source_set("hermes_ast") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/lib/AST/ASTBuilder.cpp",
    "third_party/hermes/lib/AST/CommonJS.cpp",
    "third_party/hermes/lib/AST/ESTree.cpp",
    "third_party/hermes/lib/AST/ESTreeJSONDumper.cpp",
    "third_party/hermes/lib/AST/SemValidate.cpp",
    "third_party/hermes/lib/AST/SemanticValidator.cpp",
  ]
}

source_set("hermes_backend") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/lib/BCGen/BCOpt.cpp",
    "third_party/hermes/lib/BCGen/Exceptions.cpp",
    "third_party/hermes/lib/BCGen/Lowering.cpp",
    "third_party/hermes/lib/BCGen/RegAlloc.cpp",
  ]
}

source_set("hermes_frontend_defs") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",
  ]
  cflags_cc = [ "-fvisibility=hidden" ]
  sources = [ "third_party/hermes/lib/FrontEndDefs/Builtins.cpp" ]
}

source_set("hermes_frontend") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/lib/IR/CFG.cpp",
    "third_party/hermes/lib/IR/IR.cpp",
    "third_party/hermes/lib/IR/IRBuilder.cpp",
    "third_party/hermes/lib/IR/IRVerifier.cpp",
    "third_party/hermes/lib/IR/Instrs.cpp",
    "third_party/hermes/lib/IRGen/ESTreeIRGen-except.cpp",
    "third_party/hermes/lib/IRGen/ESTreeIRGen-expr.cpp",
    "third_party/hermes/lib/IRGen/ESTreeIRGen-func.cpp",
    "third_party/hermes/lib/IRGen/ESTreeIRGen-stmt.cpp",
    "third_party/hermes/lib/IRGen/ESTreeIRGen.cpp",
    "third_party/hermes/lib/IRGen/IRGen.cpp",
    "third_party/hermes/lib/IRGen/IRInstrument.cpp",
    "third_party/hermes/lib/Optimizer/Wasm/EmitWasmIntrinsics.cpp",
    "third_party/hermes/lib/Optimizer/Wasm/WasmIntrinsics.cpp",
    "third_party/hermes/lib/Utils/Dumper.cpp",
  ]
}

source_set("hermes_hbc_backend") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/lib/BCGen/HBC/BackendContext.cpp",
    "third_party/hermes/lib/BCGen/HBC/Bytecode.cpp",
    "third_party/hermes/lib/BCGen/HBC/BytecodeDataProvider.cpp",
    "third_party/hermes/lib/BCGen/HBC/BytecodeDisassembler.cpp",
    "third_party/hermes/lib/BCGen/HBC/BytecodeFormConverter.cpp",
    "third_party/hermes/lib/BCGen/HBC/BytecodeGenerator.cpp",
    "third_party/hermes/lib/BCGen/HBC/BytecodeProviderFromSrc.cpp",
    "third_party/hermes/lib/BCGen/HBC/BytecodeStream.cpp",
    "third_party/hermes/lib/BCGen/HBC/ConsecutiveStringStorage.cpp",
    "third_party/hermes/lib/BCGen/HBC/DebugInfo.cpp",
    "third_party/hermes/lib/BCGen/HBC/HBC.cpp",
    "third_party/hermes/lib/BCGen/HBC/ISel.cpp",
    "third_party/hermes/lib/BCGen/HBC/Passes.cpp",
    "third_party/hermes/lib/BCGen/HBC/Passes/FuncCallNOpts.cpp",
    "third_party/hermes/lib/BCGen/HBC/Passes/InsertProfilePoint.cpp",
    "third_party/hermes/lib/BCGen/HBC/Passes/LowerBuiltinCalls.cpp",
    "third_party/hermes/lib/BCGen/HBC/Passes/OptEnvironmentInit.cpp",
    "third_party/hermes/lib/BCGen/HBC/SerializedLiteralGenerator.cpp",
    "third_party/hermes/lib/BCGen/HBC/SerializedLiteralParserBase.cpp",
    "third_party/hermes/lib/BCGen/HBC/SimpleBytecodeBuilder.cpp",
    "third_party/hermes/lib/BCGen/HBC/StringKind.cpp",
    "third_party/hermes/lib/BCGen/HBC/TraverseLiteralStrings.cpp",
    "third_party/hermes/lib/BCGen/HBC/UniquingFilenameTable.cpp",
    "third_party/hermes/lib/BCGen/HBC/UniquingStringLiteralTable.cpp",
  ]
}

source_set("hermes_inst") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/lib/Inst/InstDecode.cpp",
    "third_party/hermes/lib/Inst/InstDecode2.cpp",
  ]
}

source_set("hermes_internal_bytecode") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  defines = [ "HERMES_CMAKE_BUILD" ]
  sources = [ "third_party/hermes/lib/InternalBytecode/InternalBytecode.cpp" ]
}

source_set("hermes_optimizer") {
  configs = [
    ":minimal_size_build",
    ":llvm_build",
    ":hermes_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/lib/IR/Analysis.cpp",
    "third_party/hermes/lib/IR/IREval.cpp",
    "third_party/hermes/lib/Optimizer/PassManager/Pipeline.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/Auditor.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/CSE.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/CodeMotion.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/DCE.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/FuncSigOpts.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/HoistStartGenerator.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/Inlining.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/InstSimplify.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/InstructionEscapeAnalysis.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/Mem2Reg.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/ResolveStaticRequire.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/SimpleCallGraphProvider.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/SimplifyCFG.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/StackPromotion.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/TDZDedup.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/TypeInference.cpp",
    "third_party/hermes/lib/Optimizer/Scalar/Utils.cpp",
    "third_party/hermes/lib/Optimizer/Wasm/WasmSimplify.cpp",
  ]
}

source_set("hermes_parser") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/lib/Parser/JSLexer.cpp",
    "third_party/hermes/lib/Parser/JSONParser.cpp",
    "third_party/hermes/lib/Parser/JSParser.cpp",
    "third_party/hermes/lib/Parser/JSParserImpl-flow.cpp",
    "third_party/hermes/lib/Parser/JSParserImpl-jsx.cpp",
    "third_party/hermes/lib/Parser/JSParserImpl-ts.cpp",
    "third_party/hermes/lib/Parser/JSParserImpl.cpp",
    "third_party/hermes/lib/Parser/rust-api.cpp",
  ]
}

source_set("hermes_platform") {
  configs = [
    ":minimal_size_build",
    ":llvm_build",
    ":hermes_build",
    ":cpp_new_build",
  ]
  sources = [ "third_party/hermes/lib/Platform/Logging.cpp" ]
}

source_set("hermes_platform_unicode") {
  configs = [
    ":minimal_size_build",
    ":llvm_build",
    ":hermes_build",
    ":cpp_new_build",
  ]
  sources =
      [ "third_party/hermes/lib/Platform/Unicode/CharacterProperties.cpp" ]
  if (target_os != "android") {
    sources +=
        [ "third_party/hermes/lib/Platform/Unicode/PlatformUnicodeCF.cpp" ]
    frameworks = [ "CoreFoundation.framework" ]
  }
}

source_set("hermes_regex") {
  configs = [
    ":minimal_size_build",
    ":llvm_build",
    ":hermes_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/lib/Regex/Executor.cpp",
    "third_party/hermes/lib/Regex/RegexParser.cpp",
  ]
}

source_set("hermes_source_map") {
  configs = [
    ":minimal_size_build",
    ":llvm_build",
    ":hermes_build",
    ":cpp_new_build",
  ]
  sources = [
    "third_party/hermes/lib/SourceMap/SourceMap.cpp",
    "third_party/hermes/lib/SourceMap/SourceMapGenerator.cpp",
    "third_party/hermes/lib/SourceMap/SourceMapParser.cpp",
    "third_party/hermes/lib/SourceMap/SourceMapTranslator.cpp",
    "third_party/hermes/lib/SourceMap/c-api.cpp",
  ]
}

source_set("hermes_support") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",
    ":llvm_build",
    ":cpp_new_build",
  ]
  include_dirs = [ "third_party/hermes/external" ]
  sources = [
    "third_party/hermes/lib/Support/Allocator.cpp",
    "third_party/hermes/lib/Support/Base64.cpp",
    "third_party/hermes/lib/Support/Base64vlq.cpp",
    "third_party/hermes/lib/Support/CheckedMalloc.cpp",
    "third_party/hermes/lib/Support/Conversions.cpp",
    "third_party/hermes/lib/Support/ErrorHandling.cpp",
    "third_party/hermes/lib/Support/JSONEmitter.cpp",
    "third_party/hermes/lib/Support/LEB128.cpp",
    "third_party/hermes/lib/Support/OSCompatEmscripten.cpp",
    "third_party/hermes/lib/Support/OSCompatPosix.cpp",
    "third_party/hermes/lib/Support/OSCompatWindows.cpp",
    "third_party/hermes/lib/Support/PageAccessTrackerPosix.cpp",
    "third_party/hermes/lib/Support/PerfSection.cpp",
    "third_party/hermes/lib/Support/RegExpSerialization.cpp",
    "third_party/hermes/lib/Support/SHA1.cpp",
    "third_party/hermes/lib/Support/SNPrintfBuf.cpp",
    "third_party/hermes/lib/Support/Semaphore.cpp",
    "third_party/hermes/lib/Support/SimpleDiagHandler.cpp",
    "third_party/hermes/lib/Support/SourceErrorManager.cpp",
    "third_party/hermes/lib/Support/StringTable.cpp",
    "third_party/hermes/lib/Support/UTF16Stream.cpp",
    "third_party/hermes/lib/Support/UTF8.cpp",
  ]
}

source_set("hermes_vm_runtime") {
  configs = [
    ":minimal_size_build",
    ":hermes_build",

    ":llvm_build",
    ":cpp_new_build",
  ]
  include_dirs = [ "third_party/hermes/external" ]
  sources = [
    "third_party/hermes/lib/VM/ArrayStorage.cpp",
    "third_party/hermes/lib/VM/BasicBlockExecutionInfo.cpp",
    "third_party/hermes/lib/VM/BoxedDouble.cpp",
    "third_party/hermes/lib/VM/BuildMetadata.cpp",
    "third_party/hermes/lib/VM/Callable.cpp",
    "third_party/hermes/lib/VM/CellKind.cpp",
    "third_party/hermes/lib/VM/CheckHeapWellFormedAcceptor.cpp",
    "third_party/hermes/lib/VM/CodeBlock.cpp",
    "third_party/hermes/lib/VM/Debugger/Debugger.cpp",
    "third_party/hermes/lib/VM/DecoratedObject.cpp",
    "third_party/hermes/lib/VM/DictPropertyMap.cpp",
    "third_party/hermes/lib/VM/Domain.cpp",
    "third_party/hermes/lib/VM/DummyObject.cpp",
    "third_party/hermes/lib/VM/GCBase.cpp",
    "third_party/hermes/lib/VM/HandleRootOwner.cpp",
    "third_party/hermes/lib/VM/HeapSnapshot.cpp",
    "third_party/hermes/lib/VM/HermesValue.cpp",
    "third_party/hermes/lib/VM/HiddenClass.cpp",
    "third_party/hermes/lib/VM/HostModel.cpp",
    "third_party/hermes/lib/VM/IdentifierTable.cpp",
    "third_party/hermes/lib/VM/Interpreter-slowpaths.cpp",
    "third_party/hermes/lib/VM/Interpreter.cpp",
    "third_party/hermes/lib/VM/JSArray.cpp",
    "third_party/hermes/lib/VM/JSArrayBuffer.cpp",
    "third_party/hermes/lib/VM/JSCallSite.cpp",
    "third_party/hermes/lib/VM/JSCallableProxy.cpp",
    "third_party/hermes/lib/VM/JSDataView.cpp",
    "third_party/hermes/lib/VM/JSDate.cpp",
    "third_party/hermes/lib/VM/JSError.cpp",
    "third_party/hermes/lib/VM/JSGenerator.cpp",
    "third_party/hermes/lib/VM/JSLib/Array.cpp",
    "third_party/hermes/lib/VM/JSLib/ArrayBuffer.cpp",
    "third_party/hermes/lib/VM/JSLib/ArrayIterator.cpp",
    "third_party/hermes/lib/VM/JSLib/AsyncFunction.cpp",
    "third_party/hermes/lib/VM/JSLib/Boolean.cpp",
    "third_party/hermes/lib/VM/JSLib/CallSite.cpp",
    "third_party/hermes/lib/VM/JSLib/DataView.cpp",
    "third_party/hermes/lib/VM/JSLib/Date.cpp",
    "third_party/hermes/lib/VM/JSLib/DateUtil.cpp",
    "third_party/hermes/lib/VM/JSLib/DebuggerInternal.cpp",
    "third_party/hermes/lib/VM/JSLib/Error.cpp",
    "third_party/hermes/lib/VM/JSLib/Function.cpp",
    "third_party/hermes/lib/VM/JSLib/GeneratorFunction.cpp",
    "third_party/hermes/lib/VM/JSLib/GeneratorPrototype.cpp",
    "third_party/hermes/lib/VM/JSLib/GlobalObject.cpp",
    "third_party/hermes/lib/VM/JSLib/HermesBuiltin.cpp",
    "third_party/hermes/lib/VM/JSLib/HermesInternal.cpp",
    "third_party/hermes/lib/VM/JSLib/Instrument.cpp",
    "third_party/hermes/lib/VM/JSLib/Intl.cpp",
    "third_party/hermes/lib/VM/JSLib/IteratorPrototype.cpp",
    "third_party/hermes/lib/VM/JSLib/JSLibInternal.cpp",
    "third_party/hermes/lib/VM/JSLib/JSON.cpp",
    "third_party/hermes/lib/VM/JSLib/JSONLexer.cpp",
    "third_party/hermes/lib/VM/JSLib/Map.cpp",
    "third_party/hermes/lib/VM/JSLib/Math.cpp",
    "third_party/hermes/lib/VM/JSLib/Number.cpp",
    "third_party/hermes/lib/VM/JSLib/Object.cpp",
    "third_party/hermes/lib/VM/JSLib/Proxy.cpp",
    "third_party/hermes/lib/VM/JSLib/Reflect.cpp",
    "third_party/hermes/lib/VM/JSLib/RegExp.cpp",
    "third_party/hermes/lib/VM/JSLib/RegExpStringIterator.cpp",
    "third_party/hermes/lib/VM/JSLib/RuntimeCommonStorage.cpp",
    "third_party/hermes/lib/VM/JSLib/RuntimeJSONUtils.cpp",
    "third_party/hermes/lib/VM/JSLib/Set.cpp",
    "third_party/hermes/lib/VM/JSLib/Sorting.cpp",
    "third_party/hermes/lib/VM/JSLib/String.cpp",
    "third_party/hermes/lib/VM/JSLib/StringIterator.cpp",
    "third_party/hermes/lib/VM/JSLib/Symbol.cpp",
    "third_party/hermes/lib/VM/JSLib/TypedArray.cpp",
    "third_party/hermes/lib/VM/JSLib/WeakMap.cpp",
    "third_party/hermes/lib/VM/JSLib/WeakSet.cpp",
    "third_party/hermes/lib/VM/JSLib/escape.cpp",
    "third_party/hermes/lib/VM/JSLib/eval.cpp",
    "third_party/hermes/lib/VM/JSLib/print.cpp",
    "third_party/hermes/lib/VM/JSLib/require.cpp",
    "third_party/hermes/lib/VM/JSMapImpl.cpp",
    "third_party/hermes/lib/VM/JSNativeFunctions.cpp",
    "third_party/hermes/lib/VM/JSObject.cpp",
    "third_party/hermes/lib/VM/JSProxy.cpp",
    "third_party/hermes/lib/VM/JSRegExp.cpp",
    "third_party/hermes/lib/VM/JSRegExpStringIterator.cpp",
    "third_party/hermes/lib/VM/JSTypedArray.cpp",
    "third_party/hermes/lib/VM/JSWeakMapImpl.cpp",
    "third_party/hermes/lib/VM/LimitedStorageProvider.cpp",
    "third_party/hermes/lib/VM/Metadata.cpp",
    "third_party/hermes/lib/VM/Operations.cpp",
    "third_party/hermes/lib/VM/OrderedHashMap.cpp",
    "third_party/hermes/lib/VM/PredefinedStringIDs.cpp",
    "third_party/hermes/lib/VM/PrimitiveBox.cpp",
    "third_party/hermes/lib/VM/Profiler.cpp",
    "third_party/hermes/lib/VM/Profiler/ChromeTraceSerializerPosix.cpp",
    "third_party/hermes/lib/VM/Profiler/CodeCoverageProfiler.cpp",
    "third_party/hermes/lib/VM/Profiler/InlineCacheProfiler.cpp",
    "third_party/hermes/lib/VM/Profiler/SamplingProfilerPosix.cpp",
    "third_party/hermes/lib/VM/PropertyAccessor.cpp",
    "third_party/hermes/lib/VM/Runtime-profilers.cpp",
    "third_party/hermes/lib/VM/Runtime.cpp",
    "third_party/hermes/lib/VM/RuntimeModule.cpp",
    "third_party/hermes/lib/VM/RuntimeStats.cpp",
    "third_party/hermes/lib/VM/SegmentedArray.cpp",
    "third_party/hermes/lib/VM/SerializedLiteralParser.cpp",
    "third_party/hermes/lib/VM/SingleObject.cpp",
    "third_party/hermes/lib/VM/StackFrame.cpp",
    "third_party/hermes/lib/VM/StackTracesTree.cpp",
    "third_party/hermes/lib/VM/StorageProvider.cpp",
    "third_party/hermes/lib/VM/StringPrimitive.cpp",
    "third_party/hermes/lib/VM/StringRefUtils.cpp",
    "third_party/hermes/lib/VM/StringView.cpp",
    "third_party/hermes/lib/VM/SymbolRegistry.cpp",
    "third_party/hermes/lib/VM/TimeLimitMonitor.cpp",
    "third_party/hermes/lib/VM/TwineChar16.cpp",
    "third_party/hermes/lib/VM/VTable.cpp",
    "third_party/hermes/lib/VM/detail/IdentifierHashTable.cpp",
    "third_party/hermes/lib/VM/gcs/AlignedHeapSegment.cpp",
    "third_party/hermes/lib/VM/gcs/AlignedStorage.cpp",
    "third_party/hermes/lib/VM/gcs/CardTableNC.cpp",
    "third_party/hermes/lib/VM/gcs/FillerCell.cpp",
    "third_party/hermes/lib/VM/gcs/HadesGC.cpp",
  ]
}

source_set("napi_qjs_source_set") {
  configs = [
    ":quickjs_build",
    ":strict_build",
  ]
  include_dirs = [ "include" ]
  cflags_c = [
    "-fvisibility=hidden",

    # TODO(Chason): QuickJS 头文件内联函数
    "-Wno-unused-parameter",
    "-Wno-pedantic",
  ]
  sources = [ "src/js_native_api_qjs.c" ]
}

source_set("napi_common") {
  configs = [ ":strict_build" ]
  include_dirs = [ "include" ]
  cflags_c = [ "-fvisibility=hidden" ]
  sources = [ "src/js_native_api_common.c" ]
}

if (target_os != "android") {
  source_set("napi_jsc_source_set") {
    configs = [ ":strict_build" ]
    include_dirs = [ "include" ]
    cflags_c = [ "-fvisibility=hidden" ]
    frameworks = [ "JavaScriptCore.framework" ]
    sources = [ "src/js_native_api_jsc.c" ]
  }
  if (target_os == "ios") {
    static_library("jsc") {
      complete_static_lib = true
      deps = [
        ":napi_common",
        ":napi_jsc_source_set",
      ]
    }

    static_library("qjs") {
      complete_static_lib = true
      deps = [
        ":napi_common",
        ":napi_qjs_source_set",
        ":quickjs_source_set",
      ]
    }
  } else {
    source_set("gtest") {
      testonly = true
      configs = [ ":minimal_size_build" ]
      include_dirs = [
        "third_party/googletest/googletest/include",
        "third_party/googletest/googletest",
      ]
      cflags_cc = [
        "-fvisibility=hidden",
        "-std=c++20",
      ]
      sources = [
        "third_party/googletest/googletest/src/gtest-assertion-result.cc",
        "third_party/googletest/googletest/src/gtest-death-test.cc",
        "third_party/googletest/googletest/src/gtest-filepath.cc",
        "third_party/googletest/googletest/src/gtest-matchers.cc",
        "third_party/googletest/googletest/src/gtest-port.cc",
        "third_party/googletest/googletest/src/gtest-printers.cc",
        "third_party/googletest/googletest/src/gtest-test-part.cc",
        "third_party/googletest/googletest/src/gtest-typed-test.cc",
        "third_party/googletest/googletest/src/gtest.cc",
      ]
    }

    source_set("test") {
      testonly = true
      include_dirs = [
        "test/include",
        "include",
        "third_party/googletest/googletest/include",
      ]
      cflags_cc = [
        "-fvisibility=hidden",
        "-std=c++20",
      ]
      configs = [ ":minimal_size_build" ]
      sources = [
        "test/callable.cpp",
        "test/conversion.cpp",
        "test/general.cpp",
        "test/object.cpp",
        "test/reference.cpp",
        "test/test.cpp",
        "test/typeof.cpp",
      ]
      deps = [ ":gtest" ]
    }

    executable("test_jsc") {
      testonly = true
      ldflags = [ "-lc++" ]
      deps = [
        ":napi_common",
        ":napi_jsc_source_set",
        ":test",
      ]
    }

    executable("test_qjs") {
      testonly = true
      ldflags = [ "-lc++" ]
      deps = [
        ":napi_common",
        ":napi_qjs_source_set",
        ":quickjs_source_set",
        ":test",
      ]
    }
  }
}
