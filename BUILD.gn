config("napi") {
    include_dirs = [
        "include"
    ]
}

config("uthash") {
    include_dirs = [
        "third_party/uthash/src"
    ]
}

config("quickjs_config") {
    include_dirs = [
        "third_party/quickjs"
    ]
}

source_set("cutils") {
    public_configs = [":quickjs_config"]
    cflags_c = ["-Wno-sign-compare", "-Wno-unused-parameter"]
    sources = [
        "third_party/quickjs/cutils.c",
    ]
}

source_set("unicode") {
    public_configs = [":quickjs_config"]
    cflags_c = ["-Wno-sign-compare", "-Wno-unused-parameter"]
    sources = [
        "third_party/quickjs/libunicode.c"
    ]
    deps = [":cutils"]
}

source_set("regexp") {
    public_configs = [":quickjs_config"]
    cflags_c = ["-Wno-sign-compare", "-Wno-zero-length-array"]
    sources = [
        "third_party/quickjs/libregexp.c"
    ]
    deps = [":unicode", ":cutils"]
}

source_set("bf") {
    public_configs = [":quickjs_config"]
    cflags_c = ["-Wno-sign-compare", "-Wno-unused-parameter"]
    sources = [
        "third_party/quickjs/libbf.c"
    ]

    deps = [":cutils"]
}

config("quickjs_build_config") {
    defines = ["CONFIG_VERSION=\"2021-03-27\""]
    cflags_c = ["-Wno-unused-parameter", "-Wno-pedantic"]
}

# hermes config
config("hermes_config") {
    include_dirs = [
        "third_party/hermes/public",
        "third_party/hermes/API",
        "third_party/hermes/API/jsi",
        "third_party/hermes/config",
        "third_party/hermes/config",        
        "third_party/hermes/external/llvh/include",
        "third_party/hermes/external/llvh/gen/include",
    ]
}

config("hermes_VM_config") {
    defines = ["HERMESVM_GC_HADES",
        "HERMESVM_INDIRECT_THREADING",
        "HERMESVM_ALLOW_COMPRESSED_POINTERS",
        "HERMESVM_HEAP_SEGMENT_SIZE_KB=4096",
        "HERMESVM_ALLOW_CONCURRENT_GC",
        "HERMES_SLOW_DEBUG",
        "HERMES_ENABLE_DEBUGGER",
        "HERMES_LLVMHERMESVM_HEAP_SEGMENT_SIZE_KB=4096"
    ]
    include_dirs = [
        "third_party/hermes/include",
    ]
}

# hermes source_set
source_set("hermes_source_set") {
    public_configs = [":hermes_VM_config",":hermes_config"]
    cflags_c = ["-Wno-sign-compare", "-Wno-unused-parameter", "-Wno-semi"]
    sources = [
        "third_party/hermes/API/hermes/hermes.cpp",
        "third_party/hermes/lib/VM/Runtime.cpp",
    ]
}

source_set("napi_hermes_source_set") {
    public_configs = [
        ":napi",
    ]
    configs = [
        ":uthash"
    ]
    sources = [
        "src/js_native_api_hermes.cc"
    ]
    deps = [":hermes_source_set"]
}

source_set("quickjs_source_set") {
    public_configs = [":quickjs_config", ":quickjs_build_config"]
    deps = [
        ":cutils",
        ":regexp",
        ":unicode"
    ]
    defines = ["CONFIG_VERSION=\"2021-03-27\""]
    cflags_c = ["-Wno-sign-compare"]
    if (big_number) {
        defines += ["CONFIG_BIGNUM"]
        deps += [":bf",]
    }

    sources = [
        "third_party/quickjs/quickjs.c"
    ]
}

source_set("napi_qjs_source_set") {
    public_configs = [
        ":napi",
    ]
    sources = [
        "src/js_native_api_qjs.c"
    ]
    deps = [":quickjs_source_set"]
}

static_library("napi_jsc") {
    configs = [
        ":uthash"
    ]

    public_configs = [
        ":napi",
    ]

    frameworks = [ "JavaScriptCore.framework" ]

    sources = [
        "src/js_native_api_jsc.c"
    ]
}

source_set("test") {
    testonly = true
    include_dirs = [
        "test/include"
    ]
    configs = [":napi"]
    sources = [
        "test/js_native_api_test.cpp",
        "test/2_function_arguments.cpp",
        "test/3_callbacks.cpp",
        "test/4_object_factory.cpp",
        "test/5_function_factory.cpp",
        "test/6_object_wrap.cpp",
        "test/test_array.cpp",
        "test/common.c",
        "test/test_constructor.cpp",
        "test/test_conversions.cpp",
        "test/test_error.cpp",
        "test/test_exception.cpp",
        "test/test_function.cpp",
        "test/test_general.cpp",
        "test/test_handle_scope.cpp",
        "test/test_new_target.cpp",
        "test/test_number.cpp",
        "test/test_object.cpp",
        "test/test_promise.cpp",
        "test/test_properties.cpp",
        "test/test_string.cpp",
        "test/test_symbol.cpp"
    ]
    deps = [
        ":gtest",
    ]
}
executable("test_hermes") {
    testonly = true
    deps = [
        ":test",
        ":napi_hermes_source_set"
    ]
}

executable("test_jsc") {
    testonly = true
    deps = [
        ":test",
        ":napi_jsc"
    ]
}

executable("test_qjs") {
    testonly = true
    deps = [
        ":test",
        ":napi_qjs_source_set"
    ]
}

config("gtest_config") {
    include_dirs = [
        "third_party/googletest/googletest/include"
    ]
}

source_set("gtest") {
    testonly = true
    sources = [
        "third_party/googletest/googletest/src/gtest-death-test.cc",
        "third_party/googletest/googletest/src/gtest-filepath.cc",
        "third_party/googletest/googletest/src/gtest-matchers.cc",
        "third_party/googletest/googletest/src/gtest-port.cc",
        "third_party/googletest/googletest/src/gtest-printers.cc",
        "third_party/googletest/googletest/src/gtest-test-part.cc",
        "third_party/googletest/googletest/src/gtest-typed-test.cc",
        "third_party/googletest/googletest/src/gtest.cc",
    ]

    # Some files include "src/gtest-internal-inl.h".
    include_dirs = [ "third_party/googletest/googletest" ]

    public_configs = [ ":gtest_config" ]
}

source_set("gtest_main") {
    testonly = true
    sources = [ "third_party/googletest/googletest/src/gtest_main.cc" ]
    deps = [ ":gtest" ]

    public_configs = [
        ":gtest_config"
    ]
}